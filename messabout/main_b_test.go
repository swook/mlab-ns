package messabout

import (
	"testing"
)

// Taken from http://mlab-ns.appspot.com/admin/sites
var metros = []string{
	"wlg", "vie", "trn", "tpe", "syd", "svg", "sea", "prg",
	"par", "ord", "nuq", "nbo", "mil", "mia", "mad", "lju",
	"lhr", "lga", "lca", "lba", "lax", "jnb", "iad", "hnd",
	"ham", "dub", "dfw", "atl", "ath", "arn", "ams", "akl",
}

func Benchmark_ReqWithMetro(b *testing.B) {
	n := len(metros)
	for i := 0; i < b.N; i++ {
		ReqWithMetro(TESTURL, metros[i%n])
	}
}

// IPs generated with http://www.morningstarsecurity.com/research/geoipgen
var ips = []string{
	"48.215.128.11",
	"203.72.228.11",
	"32.175.121.230",
	"40.48.166.171",
	"153.250.243.131",
	"5.49.58.11",
	"206.197.83.107",
	"167.127.94.131",
	"29.121.77.75",
	"101.14.219.67",
	"118.51.220.131",
	"122.28.181.199",
	"196.204.168.51",
	"98.185.201.131",
	"129.95.63.195",
	"55.225.93.139",
	"204.139.114.75",
	"17.140.225.89",
	"152.40.24.131",
	"210.71.137.203",
	"135.85.85.35",
	"112.208.164.195",
	"88.32.47.227",
	"64.108.167.5",
	"156.112.206.131",
	"186.112.97.139",
	"139.194.4.3",
	"57.241.74.171",
	"167.180.249.227",
	"94.83.214.163",
	"219.75.104.139",
	"169.4.94.35",
	"12.152.190.131",
	"85.210.98.195",
	"57.187.175.75",
	"56.183.203.11",
	"53.37.222.75",
	"123.29.18.115",
	"38.78.48.75",
	"184.228.35.107",
	"74.184.170.3",
	"178.51.230.43",
	"26.37.75.235",
	"52.138.12.43",
	"105.164.76.131",
	"132.150.113.67",
	"4.222.247.235",
	"183.55.64.107",
	"101.174.45.99",
	"67.38.48.227",
	"113.6.64.35",
	"84.251.181.67",
	"195.215.15.115",
	"114.174.35.35",
	"78.179.82.35",
	"158.8.146.195",
	"30.240.140.235",
	"197.240.53.19",
	"49.66.182.203",
	"22.67.107.11",
	"55.171.194.43",
	"97.66.137.227",
	"206.250.238.203",
	"205.97.223.203",
	"59.9.46.235",
	"120.72.30.67",
	"7.252.0.58",
	"220.127.158.171",
	"192.128.224.139",
	"75.196.178.227",
	"148.98.119.67",
	"76.208.187.195",
	"164.187.122.163",
	"64.216.19.195",
	"120.167.85.3",
	"215.30.209.11",
	"100.48.137.35",
	"222.147.180.107",
	"64.162.104.100",
	"25.210.21.43",
	"75.143.23.131",
	"3.157.63.139",
	"76.101.133.3",
	"80.189.228.227",
	"21.29.53.75",
	"128.120.239.99",
	"86.61.169.131",
	"206.38.48.75",
	"147.166.9.195",
	"44.20.147.75",
	"113.217.173.163",
	"37.66.39.107",
	"94.137.130.3",
	"23.59.163.107",
	"113.58.219.131",
	"182.43.19.139",
	"190.110.169.171",
	"19.249.191.139",
	"34.92.84.230",
	"223.209.96.171",
}

func Benchmark_ReqWithIP(b *testing.B) {
	n := len(ips)
	for i := 0; i < b.N; i++ {
		ReqWithIP(TESTURL, ips[i%n])
	}
}

// Taken from http://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements
var countrycodes = []string{
	"AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ",
	"AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH",
	"BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO",
	"BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF",
	"BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL",
	"CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR",
	"CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM",
	"DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK",
	"FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM",
	"GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU",
	"GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN",
	"HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM",
	"IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI",
	"KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR",
	"LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY",
	"MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX",
	"FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM",
	"NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG",
	"NU", "NF", "MP", "NO", "OM", "PK", "PW", "PS", "PA",
	"PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA",
	"RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF",
	"PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC",
	"SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS",
	"SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH",
	"SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO",
	"TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE",
	"GB", "US", "UM", "UY", "UZ", "VU", "VE", "VN", "VG",
	"VI", "WF", "EH", "YE", "ZM", "ZW",
}

func Benchmark_ReqWithCountry(b *testing.B) {
	n := len(countrycodes)
	for i := 0; i < b.N; i++ {
		ReqWithCountry(TESTURL, countrycodes[i%n])
	}
}
